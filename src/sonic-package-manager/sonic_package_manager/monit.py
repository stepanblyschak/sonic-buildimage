#!/usr/bin/env python

''' This module implements monit configuration file auto-generation. '''

import os
import stat
import subprocess

from sonic_package_manager.logger import get_logger
from sonic_package_manager.common import (
    render_template,
    get_template,
    run_command,
)
from sonic_package_manager.errors import PackageInstallationError


MONIT_CONF_TEMPLATE = 'monit.conf.j2'
MONIT_CONF_PATTERN = 'monit_{}'
MONIT_CONF_PATH = os.path.join('/', 'etc', 'monit', 'conf.d')


def _get_monit_conf_path(featurename):
    ''' Returns monit output file path. '''

    return os.path.join(MONIT_CONF_PATH, MONIT_CONF_PATTERN.format(featurename))


def _generate_monit_conf(repository):
    ''' Autogenerates monit configuration based on
    manifest.

    Args:
        repository (Repository): Repository object.
    '''

    package = repository.get_package()
    manifest = package.get_manifest()
    processes = manifest.get('processes')
    if processes is None:
        return

    outputfilename = _get_monit_conf_path(package.get_feature_name())
    render_template(get_template(MONIT_CONF_TEMPLATE), outputfilename,
            {'feature': package.get_feature_name(), 'processes': processes})
    get_logger().info('Generated {}'.format(outputfilename))


def _remove_monit_conf(repository):
    ''' Removes autogenerated monit configuration. '''

    package = repository.get_package()
    outputfilename = _get_monit_conf_path(package.get_feature_name())

    if os.path.exists(outputfilename):
        os.remove(outputfilename)
        get_logger().info('Removed {}'.format(outputfilename))


def _reload_monit():
    ''' Execute 'systemctl reload monit'. '''

    run_command('systemctl reload monit')


def install_monit_conf(repository):
    ''' Generate monit configuration for a pacakge and reload monit service.

    Args:
        repository (Repository): Repository object.
    '''

    _generate_monit_conf(repository)
    _reload_monit()


def uninstall_monit_conf(repository):
    ''' Uninstalls monit configuration for a pacakge and reload monit service.

    Args:
        repository (Repository): Repository object.
    '''

    _remove_monit_conf(repository)
    _reload_monit()
