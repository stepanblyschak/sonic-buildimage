#!/usr/bin/env python

from __future__ import print_function

import os
import sys
import argparse

from sonic_package_manager.errors import PackageManagerError
from sonic_package_manager.database import PackageDatabase
from sonic_package_manager.systemd import SystemdGenerator

def main():
    parser = argparse.ArgumentParser(description='SONiC service creator utility')
    parser.add_argument('--all', help='Generate all services known in packages.json', action='store_true')
    parser.add_argument('--name', help='Generate service', type=str)

    args = parser.parse_args()

    if os.geteuid() != 0:
        print("Root privileges required for this operation")
        sys.exit(1)

    packages = database.PackageDatabase()
    generator = systemd_gen.SystemdGenerator(packages)

    try:
        if args.all:
            for package in packages:
                generator.generate(package)
        elif args.name:
            generator.generate(packages.get_package(args.name))
        else:
            parser.print_help()
            sys.exit(1)
    except PackageManagerError as err:
        print('Failed to create a service {}'.format(err))
        sys.exit(1)

if __name__ == '__main__':
    main()
